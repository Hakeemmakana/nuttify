<!DOCTYPE html>
<html lang="en">
<head>
  <%-include("../../views/partials/user/header")%>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>User Sidebar</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"/>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background-color: #f5f5f5;
    }

    .sidebar-wrapper {
      display: flex;
      flex-direction: column;
    }

    .sidebar-name {
      width: 280px;
      background-color: white;
      height: 13vh;
      padding: 13px;
      margin-bottom: 18px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.05);
      border-radius: 8px;
    }

    .profile-header {
      display: flex;
      align-items: center;
    }

    .profile-pic {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background-color: #FFD700;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 15px;
    }

    .profile-pic img {
      width: 50px;
      height: 50px;
      border-radius: 50%;
    }

    .user-name {
      font-weight: 600;
      color: #333;
    }

    .user-greeting {
      color: #666;
      font-size: 14px;
    }

    .sidebar {
      width: 280px;
      background-color: white;
      padding: 20px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.05);
      border-radius: 8px;
    }

    .menu-item {
      display: flex;
      align-items: center;
      padding: 14px 8px;
      margin-bottom: 5px;
      border-radius: 8px;
      color: #444;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .menu-item:hover {
      background-color: #f0f7ff;
      color: #2874f0;
    }

    .menu-item.active {
      background-color: #e6f2ff;
      color: #2874f0;
      font-weight: 500;
    }

    .menu-item i {
      margin-right: 12px;
      font-size: 18px;
      width: 24px;
      text-align: center;
    }

    .submenu-item {
      padding: 10px 0 10px 36px;
      color: #666;
      cursor: pointer;
      font-size: 14px;
      border-radius: 8px;
    }

    .submenu-item:hover {
      background-color: #f0f7ff;
      color: #2874f0;
    }

    .submenu-item.active {
      color: #2874f0;
      font-weight: 500;
    }

    a {
      text-decoration: none;
    }
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Roboto', Arial, sans-serif;
    }

    body {
      background-color: #f1f3f6;
      color: #212121;
    }

    .content-header {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 25px;
    }

    .add-address-btn {
      background-color: white;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      padding: 20px;
      margin-bottom: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
    }

    .plus-icon {
      width: 20px;
      height: 20px;
      border-radius: 50%;
      background-color: #2874f0;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 10px;
      font-size: 18px;
    }

    .add-text {
      color: #2874f0;
      font-weight: 500;
    }

    .address-form {
      background-color: #f5faff;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      padding: 20px;
      margin-bottom: 20px;
      display: none;
      max-width: 700px;
    }

    .address-form.active {
      display: block;
    }
    .edit-address-form {
      background-color: #f5faff;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      padding: 20px;
      margin-bottom: 20px;
      display: none;
      max-width: 700px;
    }

    .edit-address-form.active {
      display: block;
    }

    .location-btn {
      background-color: #2874f0;
      color: white;
      border: none;
      border-radius: 2px;
      padding: 10px 15px;
      display: flex;
      align-items: center;
      font-size: 14px;
      cursor: pointer;
      margin-bottom: 20px;
    }

    .location-btn i {
      margin-right: 8px;
    }

    .form-row {
      display: flex;
      gap: 15px;
      margin-bottom: 15px;
    }

    .form-group {
      flex: 1;
    }

    .form-control,
    .form-control-textarea,
    select.form-control {
      width: 100%;
      padding: 10px;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      font-size: 14px;
    }

    .form-control-textarea {
      height: 80px;
      resize: none;
    }

    .form-radio {
      display: flex;
      gap: 20px;
      margin-bottom: 20px;
    }

    .radio-option {
      display: flex;
      align-items: center;
    }

    .radio-option input {
      margin-right: 6px;
    }

    .form-actions {
      display: flex;
      gap: 15px;
    }

    .btn-save {
      background-color: #2874f0;
      color: white;
      border: none;
      border-radius: 2px;
      padding: 10px 30px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
    }

    .btn-cancel {
      background-color: white;
      color: #2874f0;
      border: 1px solid #2874f0;
      border-radius: 2px;
      padding: 10px 15px;
      font-size: 14px;
      cursor: pointer;
    }

    .address-card {
      background-color: white;
      border: 1px solid #e0e0e0;
      border-radius: 2px;
      padding: 15px 20px;
      margin-bottom: 15px;
      position: relative;
    }

    .address-type {
      display: inline-block;
      padding: 3px 8px;
      background-color: #f0f0f0;
      border-radius: 2px;
      font-size: 12px;
      margin-bottom: 10px;
    }

    .address-name {
      font-weight: 500;
      margin-bottom: 5px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .address-details {
      font-size: 14px;
      color: #212121;
      line-height: 1.5;
      margin-bottom: 5px;
    }

    .address-actions {
      position: absolute;
      top: 15px;
      right: 15px;
      cursor: pointer;
    }

    select.form-control {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24' fill='none' stroke='%23555' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 10px center;
      padding-right: 30px;
    }
    .content {
      flex: 1;
      padding: 20px 30px;
      background: white;
      margin-left: 17px;
      border-radius: 5px;
    }
    .dropdown-wrapper {
      position: relative;
      display: inline-block;
    }

    .dropdown-toggle {
      cursor: pointer;
      padding: 6px;
    }

    .dropdown-menu {
      position: absolute;
      right: 0;
      top: 20px;
      background-color: white;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border-radius: 4px;
      padding: 5px 0;
      min-width: 100px;
      display: none;
      z-index: 100;
    }

    .dropdown-item {
      padding: 8px 15px;
      cursor: pointer;
      white-space: nowrap;
    }

    .dropdown-item:hover {
      background-color: #f0f0f0;
    }

    .dropdown-wrapper:hover .dropdown-menu {
      display: block;
    }
    .body-divv {
      display: flex;
      padding: 30px;
    }
    .error {
      color: red;
      font-size: 12px;
      margin-top: 5px;
      display: none;
    }

    .error.show {
      display: block;
    }
  </style>
</head>
<body>
  <div class="body-divv">
    <div class="sidebar-wrapper">
      <div class="sidebar-name">
        <div class="profile-header">
          <div class="profile-pic">
            <img src="/api/placeholder/60/60" alt="User" />
          </div>
          <div>
            <div class="user-greeting">Hello,</div>
            <div class="user-name"><%=user.name%></div>
          </div>
        </div>
      </div>

      <div class="sidebar">
        <a href="/account/orders">
          <div class="menu-item"><i class="fas fa-box"></i> MY ORDERS</div>
        </a>
        <div class="menu-item active"><i class="fas fa-user-cog"></i> ACCOUNT SETTINGS</div>
        <a href="/account"><div class="submenu-item">Profile Information</div></a>
        <div class="submenu-item active">Manage Addresses</div>
        <div class="submenu-item">Change Password</div>
        <a href="/wishlist">
          <div class="menu-item"><i class="fas fa-heart"></i> WISHLIST</div>
        </a>
        <div class="menu-item"><i class="fas fa-wallet"></i> WALLET</div>
        <div class="menu-item"><i class="fas fa-star"></i> RATINGS & REVIEWS</div>
        <div class="menu-item"><i class="fas fa-power-off"></i> Logout</div>
      </div>
    </div>

    <div class="content">
      <div class="content-header">Manage Addresses</div>
      <div class="add-address-btn" id="toggleAddressForm">
        <div class="plus-icon">+</div>
        <div class="add-text">ADD A NEW ADDRESS</div>
      </div>

      <!-- Add Address Form -->
      <div class="address-form" id="addressForm">
        <form id="addressForm" action="/add-address" method="post">
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="name" name="name" placeholder="Name" />
              <p class="error" id="nameError">Please enter valid name (alphabets only, 3-50 chars)</p>
            </div>
            <div class="form-group">
              <input type="text" class="form-control" id="phone" name="phone" placeholder="10-digit mobile number" />
              <p class="error" id="phoneError">Enter valid phone number (starts with 6-9)</p>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Pincode" />
              <p class="error" id="pincodeError">Valid 6-digit pincode required (100000-999999)</p>
            </div>
            <div class="form-group">
              <input type="text" class="form-control" id="post" name="post" placeholder="Post office" />
              <p class="error" id="postError">Please enter valid post office (3-20 chars)</p>
            </div>
          </div>
          <div class="form-group" style="margin-bottom: 15px;">
            <textarea class="form-control-textarea" id="address" name="address" placeholder="Address (Area and Street)"></textarea>
            <p class="error" id="addressError">Address is required, minimum 10 characters</p>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="district" name="district" placeholder="City/District/Town" />
              <p class="error" id="districtError">Minimum 3 letters required, no special chars</p>
            </div>
            <div class="form-group">
              <select class="form-control" id="state" name="state">
                <option value="">--Select State--</option>
                <option value="Kerala">Kerala</option>
                <option value="Tamil Nadu">Tamil Nadu</option>
                <option value="Karnataka">Karnataka</option>
              </select>
              <p class="error" id="stateError">Please select a state</p>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="altPhone" name="altPhone" placeholder="Alternate Phone (Optional)" />
              <p class="error" id="altPhoneError">Alternate phone must be a valid 10-digit number</p>
            </div>
          </div>
          <div class="form-radio">
            <div class="radio-option">
              <input type="radio" id="home" name="addressType" value="home" checked />
              <label for="home">Home</label>
            </div>
            <div class="radio-option">
              <input type="radio" id="work" name="addressType" value="office" />
              <label for="work">Work</label>
            </div>
          </div>
          <div class="form-actions">
            <button type="submit" class="btn-save">SAVE</button>
            <button type="button" class="btn-cancel" id="cancelForm">CANCEL</button>
          </div>
        </form>
      </div>

      <!-- Address Cards and Edit Forms -->
      <% address.address.forEach(data => { %>
      <div class="address-card">
        <div class="address-type"><%= data.addressType %></div>
        <div class="address-name"><%= data.name %> <span style="color: #878787;"><%= data.phone %></span></div>
        <div class="address-details">
          <%= data.address %>, <%= data.postOffice %>, <%= data.district %>, <%= data.state %> - <%= data.pincode %>
        </div>
        <div class="address-actions">
          <div class="dropdown-wrapper">
            <i class="fas fa-ellipsis-vertical dropdown-toggle"></i>
            <div class="dropdown-menu">
              <div class="dropdown-item" onclick="editToggleAddressForm(event, '<%= data._id %>')">Edit</div>
              <div class="dropdown-item" onclick="deleteAddress('<%= data._id %>')">Delete</div>
            </div>
          </div>
        </div>
      </div>

      <!-- Edit Address Form -->
      <div class="edit-address-form" id="editAddressForm_<%= data._id %>">
        <form id="editAddressForm_<%= data._id %>" action="/edit-address" method="post">
          <input type="hidden" name="id" value="<%= data._id %>" />
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="editname_<%= data._id %>" name="name" value="<%= data.name %>" placeholder="Name" />
              <p class="error" id="editnameError_<%= data._id %>">Please enter valid name (alphabets only, 3-50 chars)</p>
            </div>
            <div class="form-group">
              <input type="text" class="form-control" id="editphone_<%= data._id %>" name="phone" value="<%= data.phone %>" placeholder="10-digit mobile number" />
              <p class="error" id="editphoneError_<%= data._id %>">Enter valid phone number (starts with 6-9)</p>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="editpincode_<%= data._id %>" name="pincode" value="<%= data.pincode %>" placeholder="Pincode" />
              <p class="error" id="editpincodeError_<%= data._id %>">Valid 6-digit pincode required (100000-999999)</p>
            </div>
            <div class="form-group">
              <input type="text" class="form-control" id="editpost_<%= data._id %>" name="post" value="<%= data.postOffice %>" placeholder="Post office" />
              <p class="error" id="editpostError_<%= data._id %>">Please enter valid post office (3-20 chars)</p>
            </div>
          </div>
          <div class="form-group" style="margin-bottom: 15px;">
            <textarea class="form-control-textarea" id="editaddress_<%= data._id %>" name="address" placeholder="Address (Area and Street)"><%= data.address %></textarea>
            <p class="error" id="editaddressError_<%= data._id %>">Address is required, minimum 10 characters</p>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="editdistrict_<%= data._id %>" name="district" value="<%= data.district %>" placeholder="City/District/Town" />
              <p class="error" id="editdistrictError_<%= data._id %>">Minimum 3 letters required, no special chars</p>
            </div>
            <div class="form-group">
              <select class="form-control" id="editstate_<%= data._id %>" name="state">
                <option value="Kerala" <%= data.state === 'Kerala' ? 'selected' : '' %>>Kerala</option>
                <option value="Tamil Nadu" <%= data.state === 'Tamil Nadu' ? 'selected' : '' %>>Tamil Nadu</option>
                <option value="Karnataka" <%= data.state === 'Karnataka' ? 'selected' : '' %>>Karnataka</option>
              </select>
              <p class="error" id="editstateError_<%= data._id %>">Please select a state</p>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group">
              <input type="text" class="form-control" id="editaltPhone_<%= data._id %>" name="altPhone" value="<%= data.altPhone || '' %>" placeholder="Alternate Phone (Optional)" />
              <p class="error" id="editaltPhoneError_<%= data._id %>">Alternate phone must be a valid 10-digit number</p>
            </div>
          </div>
          <div class="form-radio">
            <div class="radio-option">
              <input type="radio" id="edithome_<%= data._id %>" name="addressType" value="home" <%= data.addressType === 'home' ? 'checked' : '' %> />
              <label for="edithome_<%= data._id %>">Home</label>
            </div>
            <div class="radio-option">
              <input type="radio" id="editwork_<%= data._id %>" name="addressType" value="office" <%= data.addressType === 'office' ? 'checked' : '' %> />
              <label for="editwork_<%= data._id %>">Work</label>
            </div>
          </div>
          <div class="form-actions">
            <button type="submit" class="btn-save">SAVE</button>
            <button type="button" class="btn-cancel" onclick="cancelEditForm('<%= data._id %>')">CANCEL</button>
          </div>
        </form>
      </div>
      <% }) %>
    </div>
  </div>

  <script>
    // Toggle Add Address Form
    const toggleBtn = document.getElementById("toggleAddressForm");
    const addressForm = document.getElementById("addressForm");
    const cancelBtn = document.getElementById("cancelForm");

    toggleBtn.addEventListener("click", () => {
      addressForm.classList.toggle("active");
      document.querySelectorAll(".edit-address-form").forEach(form => {
        form.classList.remove("active");
      });
    });

    cancelBtn.addEventListener("click", () => {
      addressForm.classList.remove("active");
      document.getElementById("addressForm").reset();
      clearErrors();
    });

    // Toggle Edit Address Form
    function editToggleAddressForm(event, id) {
      event.preventDefault();
      const editForm = document.getElementById(`editAddressForm_${id}`);
      document.querySelectorAll(".edit-address-form").forEach(form => {
        form.classList.remove("active");
      });
      addressForm.classList.remove("active");
      editForm.classList.toggle("active");
    }

    // Cancel Edit Form
    function cancelEditForm(id) {
      const editForm = document.getElementById(`editAddressForm_${id}`);
      editForm.classList.remove("active");
      clearErrors(id);
    }

    // Add Address
    document.getElementById("addressForm").addEventListener("submit", function (e) {
      e.preventDefault();
      if (addFormValidation()) {
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData);
        console.log("Add Form Data:", data);

        fetch("/add-address", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        })
          .then((response) => response.json())
          .then((result) => {
            if (result.success) {
              Swal.fire({
                position: 'bottom',
                icon: 'success',
                title: result.msg,
                showConfirmButton: false,
                timer: 1500,
                background: '#000',
                color: '#fff',
                timerProgressBar: true,
                toast: true,
                didOpen: (toast) => {
                  toast.addEventListener('mouseenter', Swal.stopTimer);
                  toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
              }).then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire({
                position: 'bottom',
                icon: 'error',
                title: result.msg || "Failed to add address",
                showConfirmButton: false,
                timer: 1500,
                background: '#000',
                color: '#fff',
                toast: true,
              });
            }
          })
          
      }
    });

    // Edit Address
    document.querySelectorAll("[id^='editAddressForm_']").forEach(form => {
      form.addEventListener("submit", function (e) {
        e.preventDefault();
        const id = form.id.split("_")[1];
        if (editFormValidation(id)) {
          const formData = new FormData(e.target);
          const data = Object.fromEntries(formData);
          console.log("Edit Form Data:", data);

          fetch("/edit-address", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => response.json())
            .then((result) => {
              if (result.success) {
                Swal.fire({
                  position: 'bottom',
                  icon: 'success',
                  title: result.msg || "Address updated successfully",
                  showConfirmButton: false,
                  timer: 1500,
                  background: '#000',
                  color: '#fff',
                  timerProgressBar: true,
                  toast: true,
                  didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                  }
                }).then(() => {
                  window.location.reload();
                });
              } else {
                Swal.fire({
                  position: 'bottom',
                  icon: 'error',
                  title: result.msg || "Failed to update address",
                  showConfirmButton: false,
                  timer: 1500,
                  background: '#000',
                  color: '#fff',
                  toast: true,
                });
              }
            })
           
        }
      });
    });

    // Delete Address
    function deleteAddress(id) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#2874f0',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        background: '#000',
        color: '#fff',
      }).then((result) => {
        if (result.isConfirmed) {
          fetch("/delete-address", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id }),
          })
            .then((response) => response.json())
            .then((result) => {
              if (result.success) {
                Swal.fire({
                  position: 'bottom',
                  icon: 'success',
                  title: result.msg || "Address deleted successfully",
                  showConfirmButton: false,
                  timer: 1500,
                  background: '#000',
                  color: '#fff',
                  timerProgressBar: true,
                  toast: true,
                  didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                  }
                }).then(() => {
                  window.location.reload();
                });
              } else {
                Swal.fire({
                  position: 'bottom',
                  icon: 'error',
                  title: result.msg || "Failed to delete address",
                  showConfirmButton: false,
                  timer: 1500,
                  background: '#000',
                  color: '#fff',
                  toast: true,
                });
              }
            })
            
        }
      });
    }

    // Add address Validation 
    function addFormValidation() {
      let isValid = true;
      clearErrors();

      // Name
      const name = document.getElementById("name").value.trim();
      const nameRegex = /^[A-Za-z\s]+$/;
      if (!name || name.length < 3 || name.length > 50 || !nameRegex.test(name)) {
        showError("nameError");
        isValid = false;
      }

      // Phone
      const phone = document.getElementById("phone").value.trim();
      const phoneRegex = /^[6-9]\d{9}$/;
      if (!phone || !phoneRegex.test(phone)) {
        showError("phoneError");
        isValid = false;
      }

      // Pincode
      const pincode = document.getElementById("pincode").value.trim();
      const pincodeRegex = /^\d{6}$/;
      if (!pincode || !pincodeRegex.test(pincode) || parseInt(pincode) < 100000 || parseInt(pincode) > 999999) {
        showError("pincodeError");
        isValid = false;
      }

      // postOffice
      const post = document.getElementById("post").value.trim();
      const postRegex = /^[A-Za-z\s]+$/;
      if (!post || post.length < 3 || post.length > 20 || !postRegex.test(post)) {
        showError("postError");
        isValid = false;
      }

      // Address
      const address = document.getElementById("address").value.trim();
      if (!address || address.length < 10 || address.length > 200) {
        showError("addressError");
        isValid = false;
      }

      // District
      const district = document.getElementById("district").value.trim();
      const districtRegex = /^[A-Za-z\s]+$/;
      if (!district || district.length < 3 || district.length > 50 || !districtRegex.test(district)) {
        showError("districtError");
        isValid = false;
      }

      // State
      const state = document.getElementById("state").value;
      if (!state) {
        showError("stateError");
        isValid = false;
      }

      // altPhone
      const altPhone = document.getElementById("altPhone").value.trim();
      if (altPhone && !phoneRegex.test(altPhone)) {
        showError("altPhoneError");
        isValid = false;
      }

      return isValid;
    }

    // Edit form validation 
    function editFormValidation(id) {
      let isValid = true;
      clearErrors(id);

      // Name
      const name = document.getElementById(`editname_${id}`).value.trim();
      const nameRegex = /^[A-Za-z\s]+$/;
      if (!name || name.length < 3 || name.length > 50 || !nameRegex.test(name)) {
        showError(`editnameError_${id}`);
        isValid = false;
      }

      // Phone
      const phone = document.getElementById(`editphone_${id}`).value.trim();
      const phoneRegex = /^[6-9]\d{9}$/;
      if (!phone || !phoneRegex.test(phone)) {
        showError(`editphoneError_${id}`);
        isValid = false;
      }

      // Pincode
      const pincode = document.getElementById(`editpincode_${id}`).value.trim();
      const pincodeRegex = /^\d{6}$/;
      if (!pincode || !pincodeRegex.test(pincode) || parseInt(pincode) < 100000 || parseInt(pincode) > 999999) {
        showError(`editpincodeError_${id}`);
        isValid = false;
      }

      // Post 
      const post = document.getElementById(`editpost_${id}`).value.trim();
      const postRegex = /^[A-Za-z\s]+$/;
      if (!post || post.length < 3 || post.length > 20 || !postRegex.test(post)) {
        showError(`editpostError_${id}`);
        isValid = false;
      }

      // Address: 10-200 chars
      const address = document.getElementById(`editaddress_${id}`).value.trim();
      if (!address || address.length < 10 || address.length > 200) {
        showError(`editaddressError_${id}`);
        isValid = false;
      }

      // District: 3-50 chars, no special chars
      const district = document.getElementById(`editdistrict_${id}`).value.trim();
      const districtRegex = /^[A-Za-z\s]+$/;
      if (!district || district.length < 3 || district.length > 50 || !districtRegex.test(district)) {
        showError(`editdistrictError_${id}`);
        isValid = false;
      }

      // State: Must be selected
      const state = document.getElementById(`editstate_${id}`).value;
      if (!state) {
        showError(`editstateError_${id}`);
        isValid = false;
      }

      // Alternate Phone: Optional, 10 digits if provided
      const altPhone = document.getElementById(`editaltPhone_${id}`).value.trim();
      if (altPhone && !phoneRegex.test(altPhone)) {
        showError(`editaltPhoneError_${id}`);
        isValid = false;
      }

      return isValid;
    }

    // Show Error
    function showError(errorId) {
      document.getElementById(errorId).classList.add("show");
    }

    // Clear Errors
    function clearErrors(id = "") {
      const form = document.getElementById(id ? `editAddressForm_${id}` : "addressForm");
      form.querySelectorAll(".error").forEach((error) => {
        error.classList.remove("show");
      });
    }
  </script>
  <%-include("../../views/partials/user/footer")%>
</body>
</html>