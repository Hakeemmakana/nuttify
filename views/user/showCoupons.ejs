<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <style>
        :root {
            --primary: #4f46e5;
            --primary-hover: #4338ca;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --light-bg: #f9fafb;
            --dark-text: #1f2937;
            --light-text: #6b7280;
            --border: #e5e7eb;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: var(--light-bg);
            color: var(--dark-text);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }
        
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        h1 {
            font-size: 2rem;
            color: var(--dark-text);
        }
        
        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 0.375rem;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        
        .btn:hover {
            background-color: var(--primary-hover);
        }
        
        .coupon-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }
        
        .coupon-card {
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .coupon-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.05);
        }
        
        .coupon-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border);
            position: relative;
        }
        
        .coupon-code {
            font-size: 1.5rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin-bottom: 0.5rem;
        }
        
        .status-badge {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
        }
        
        .status-active {
            background-color: rgba(16, 185, 129, 0.1);
            color: var(--success);
        }
        
        .status-disabled {
            background-color: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }
        
        .coupon-body {
            padding: 1.5rem;
        }
        
        .coupon-detail {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.75rem;
        }
        
        .detail-label {
            color: var(--light-text);
            font-weight: 500;
        }
        
        .detail-value {
            font-weight: 600;
        }
        
        .coupon-footer {
            display: flex;
            justify-content: center;
            padding: 1rem 1.5rem;
            background-color: var(--light-bg);
        }
        
        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }
        
        .btn-copy {
            background-color: var(--primary);
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-copy:hover {
            background-color: var(--primary-hover);
        }
        
        .copy-feedback {
            position: absolute;
            background-color: var(--dark-text);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.25rem;
            font-size: 0.875rem;
            z-index: 10;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            margin-bottom: 0.5rem;
        }
        
        .copy-feedback.show {
            opacity: 1;
        }
        
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .empty-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: var(--light-text);
        }
        
        .loading {
            text-align: center;
            padding: 2rem;
            color: var(--light-text);
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Available Coupons</h1>
            <button class="btn" id="back-btn">Back</button>
        </header>
        
        <div id="coupon-container" class="coupon-grid">
            <!-- Coupons will be loaded here -->
            <div class="loading">Loading coupons...</div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Simulated coupon data for demonstration
            const coupons =<%- JSON.stringify(coupon) %>;

            // Function to display coupons
            function displayCoupons() {
                const container = document.getElementById('coupon-container');

                // Clear loading message
                container.innerHTML = '';

                if (coupons.length === 0) {
                    container.innerHTML = `
                        <div class="empty-state">
                            <div class="empty-icon">ðŸ“ƒ</div>
                            <h2>No Coupons Found</h2>
                            <p>Create your first coupon to get started</p>
                            <button class="btn" style="margin-top: 1rem;">Create Coupon</button>
                        </div>
                    `;
                    return;
                }

                coupons.forEach(coupon => {
                    const startDate = moment(coupon.startDate).format('MMM D, YYYY');
                    const endDate = moment(coupon.endDate).format('MMM D, YYYY');

                    const couponCard = document.createElement('div');
                    couponCard.className = 'coupon-card';
                    couponCard.innerHTML = `
                        <div class="coupon-header">
                            <div class="coupon-code">${coupon.couponCode}</div>
                            <div class="status-badge status-${coupon.status.toLowerCase()}">${coupon.status}</div>
                            <div>${coupon.description || 'No description'}</div>
                        </div>
                        <div class="coupon-body">
                            <div class="coupon-detail">
                                <span class="detail-label">Discount</span>
                                <span class="detail-value">â‚¹${coupon.discountValue}</span>
                            </div>
                            <div class="coupon-detail">
                                <span class="detail-label">Min. Purchase</span>
                                <span class="detail-value">â‚¹${coupon.minPurchase}</span>
                            </div>
                            <div class="coupon-detail">
                                <span class="detail-label">Valid From</span>
                                <span class="detail-value">${startDate}</span>
                            </div>
                            <div class="coupon-detail">
                                <span class="detail-label">Valid Until</span>
                                <span class="detail-value">${endDate}</span>
                            </div>
                        </div>
                        <div class="coupon-footer">
                            <button class="btn btn-sm btn-copy copy-btn" data-code="${coupon.couponCode}">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                    <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"/>
                                    <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"/>
                                </svg>
                                Copy Code
                            </button>
                            <span class="copy-feedback">Copied!</span>
                        </div>
                    `;

                    container.appendChild(couponCard);
                });

                // Add event listeners for copy buttons
                document.querySelectorAll('.copy-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const couponCode = this.getAttribute('data-code');
                        const feedback = this.nextElementSibling; // Get the copy-feedback span

                        // Copy to clipboard
                        navigator.clipboard.writeText(couponCode).then(() => {
                            // Show feedback
                            feedback.classList.add('show');
                            setTimeout(() => {
                                feedback.classList.remove('show');
                            }, 2000); // Hide after 2 seconds
                        }).catch(err => {
                            console.error('Failed to copy:', err);
                            alert('Failed to copy coupon code. Please try again.');
                        });
                    });
                });

                // Add event listeners to buttons (for edit and delete, if implemented)
                document.querySelectorAll('.edit-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const couponId = this.getAttribute('data-id');
                        alert(`Edit coupon with ID: ${couponId}`);
                        // Implement edit functionality here
                    });
                });

                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const couponId = this.getAttribute('data-id');
                        if (confirm('Are you sure you want to delete this coupon?')) {
                            alert(`Delete coupon with ID: ${couponId}`);
                            // Implement delete functionality here
                        }
                    });
                });
            }

            // Add back button event
            document.getElementById('back-btn').addEventListener('click', function() {
                window.history.back();
            });

            // Display coupons (in a real app, you would fetch from your API)
            displayCoupons();
        });
    </script>
</body>
</html>